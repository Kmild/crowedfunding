<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
         version="4.0">

<!--    配置监听器 spring ioc容器-->
<!--    <listener>-->
<!--        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>-->
<!--    </listener>-->

<!--    <context-param>-->
<!--        <param-name>contextConfigLocation</param-name>-->
<!--        &lt;!&ndash;     注意这里是 classpath*   &ndash;&gt;-->
<!--        <param-value>classpath*:spring-persist-*.xml</param-value>-->
<!--    </context-param>-->


<!--    配置字符编码过滤器-->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>utf-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceRequestEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
        <init-param>
            <param-name>forceResponseEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <filter>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>hiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


<!--配置中央控制器  springMVC ioc容器-->
    <servlet>
        <servlet-name>dispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:spring-*.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>dispatcherServlet</servlet-name>
<!--
        *.html :
           优点1：静态资源完全不经过springMVC，不需要特殊处理（配置默认servlet）。
           优点2：可以实现伪静态效果。（即看起来像是访问一个静态资源）
           缺点：不符合RESTFUL风格。
-->
        <url-pattern>*.html</url-pattern>

<!--        如果一个ajax请求扩展名是html,但是实际服务器给浏览器返回的是json数据二者就不匹配了会报406错误
            为了让ajax请求拿到json格式的响应数据我们另外配置json扩展名-->
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>
    <!--    springSecurity

            名字必须是springSecurityFilterChain-->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <!--        将会拦截所有请求，包括静态资源-->
        <url-pattern>/*</url-pattern>
    </filter-mapping>

</web-app>