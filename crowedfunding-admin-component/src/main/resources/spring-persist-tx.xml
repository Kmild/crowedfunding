<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
         http://www.springframework.org/schema/aop/spring-aop.xsd
          http://www.springframework.org/schema/tx
         http://www.springframework.org/schema/tx/spring-tx.xsd
">


<!--    配置自动扫描的包 : 主要是把service层组件放到ioc容器中-->
    <context:component-scan base-package="com.xiaoyan.crowd.service"></context:component-scan>
<!--    配置事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
<!--        装配数据源-->
        <property name="dataSource" ref="dataSource"></property>
    </bean>

<!--    配置事务切面-->
    <aop:config>
<!--     配置切入点表达式   考虑到后面整合springSecurity,避免把UserDetailsService加入事务控制把切入点表达式定位到ServiceImpl-->
        <aop:pointcut id="point" expression="execution(* *..*ServiceImpl.*(..))"/>
<!--        将通知和切入点表达式连接起来-->
        <aop:advisor advice-ref="txAdvice" pointcut-ref="point"></aop:advisor>

    </aop:config>

<!--   配置事务通知 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
<!--        配置事务属性-->
        <tx:attributes>
<!--            查询：配置只读属性，让数据库知道这是一个查询操作，能够进行一定的优化-->
            <tx:method name="get*" read-only="true"/>
            <tx:method name="find*" read-only="true"></tx:method>
            <tx:method name="query*" read-only="true"></tx:method>
            <tx:method name="count*" read-only="true"></tx:method>
<!--            增删改：配置事务传播行为、回滚异常-->
            <!--
            propagation属性：
             REQUIRED：默认值，表示当前方法必须工作在事务中，如果当前线程上没有已经开启的事务，则自己开启事务。
                       如果已经有事务开启，那么就使用这个已有的事务。顾虑：用别人的事务可能被回滚。
             REQUIRES_NEW：（建议使用）不管当前线程有没有开启事务都会自己开启事务并使用。好处：不受其他事务回滚的影响。
            rollback-for属性：
                 默认：在运行时异常回滚
                 rollback-for="java.lang.Exception"：所有异常都回滚。
            -->
            <tx:method name="save*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
            <tx:method name="remove*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
            <tx:method name="update*" propagation="REQUIRES_NEW" rollback-for="java.lang.Exception"></tx:method>
        </tx:attributes>


    </tx:advice>

<!-- 注意：在基于xml的声明式事务中，事务属性的tx:method是必须配置的，如果没有配置则不生效-->
</beans>